Organizations:
    - &OrdererOrg
        Name: OrdererOrg
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

    - &farmer
        Name: farmerMSP
        ID: farmerMSP
        MSPDir: crypto-config/peerOrganizations/farmer.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('farmerMSP.admin', 'farmerMSP.peer', 'farmerMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('farmerMSP.admin', 'farmerMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('farmerMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('farmerMSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('farmerMSP.admin', 'farmerMSP.client')"

        AnchorPeers:
            - Host: peer0.farmer.example.com
              Port: 7051

    - &distributor
        Name: distributorMSP
        ID: distributorMSP
        MSPDir: crypto-config/peerOrganizations/distributor.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('distributorMSP.admin', 'distributorMSP.peer', 'distributorMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('distributorMSP.admin', 'distributorMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('distributorMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('distributorMSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('Org1MSP.admin')"

        AnchorPeers:
            - Host: peer0.distributor.example.com
              Port: 9051
    
    - &consumer
        Name: consumerMSP
        ID: consumerMSP
        MSPDir: crypto-config/peerOrganizations/consumer.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('consumerMSP.admin', 'consumerMSP.peer', 'consumerMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('consumerMSP.admin', 'consumerMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('consumerMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('consumerMSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('Org1MSP.admin')"

        AnchorPeers:
            - Host: peer0.consumer.example.com
              Port: 8051

    - &manufacturer
        Name: manufacturerMSP
        ID: manufacturerMSP
        MSPDir: crypto-config/peerOrganizations/manufacturer.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('manufacturerMSP.admin', 'manufacturerMSP.peer', 'manufacturerMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('manufacturerMSP.admin', 'manufacturerMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('manufacturerMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('manufacturerMSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('Org1MSP.admin')"

        AnchorPeers:
            - Host: peer0.manufacturer.example.com
              Port: 9551

    - &wholesaler
        Name: wholesalerMSP
        ID: wholesalerMSP
        MSPDir: crypto-config/peerOrganizations/wholesaler.example.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('wholesalerMSP.admin', 'wholesalerMSP.peer', 'wholesalerMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('wholesalerMSP.admin', 'wholesalerMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('wholesalerMSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('wholesalerMSP.peer')"
            # CustomPolicy:
            #     Type: Signature
            #     Rule: "OR('Org1MSP.admin')"

        AnchorPeers:
            - Host: peer0.wholesaler.example.com
              Port: 5551

Capabilities:
    Channel: &ChannelCapabilities
        V2_0: true
    Orderer: &OrdererCapabilities
        V2_0: true
    Application: &ApplicationCapabilities
        V2_0: true

Application: &ApplicationDefaults
    ACLs: &ACLsDefault
        # This section provides defaults for policies for various resources
        # in the system. These "resources" could be functions on system chaincodes
        # (e.g., "GetBlockByNumber" on the "qscc" system chaincode) or other resources
        # (e.g.,who can receive Block events). This section does NOT specify the resource's
        # definition or API, but just the ACL policy for it.
        #
        # User's can override these defaults with their own policy mapping by defining the
        # mapping under ACLs in their channel definition

        #---New Lifecycle System Chaincode (_lifecycle) function to policy mapping for access control--#

        # ACL policy for _lifecycle's "CommitChaincodeDefinition" function
        _lifecycle/CommitChaincodeDefinition: /Channel/Application/Writers

        # ACL policy for _lifecycle's "QueryChaincodeDefinition" function
        _lifecycle/QueryChaincodeDefinition: /Channel/Application/Readers

        # ACL policy for _lifecycle's "QueryNamespaceDefinitions" function
        _lifecycle/QueryNamespaceDefinitions: /Channel/Application/Readers

        #---Lifecycle System Chaincode (lscc) function to policy mapping for access control---#

        # ACL policy for lscc's "getid" function
        lscc/ChaincodeExists: /Channel/Application/Readers

        # ACL policy for lscc's "getdepspec" function
        lscc/GetDeploymentSpec: /Channel/Application/Readers

        # ACL policy for lscc's "getccdata" function
        lscc/GetChaincodeData: /Channel/Application/Readers

        # ACL Policy for lscc's "getchaincodes" function
        lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

        #---Query System Chaincode (qscc) function to policy mapping for access control---#

        # ACL policy for qscc's "GetChainInfo" function
        qscc/GetChainInfo: /Channel/Application/Readers

        # ACL policy for qscc's "GetBlockByNumber" function
        qscc/GetBlockByNumber: /Channel/Application/Readers

        # ACL policy for qscc's  "GetBlockByHash" function
        qscc/GetBlockByHash: /Channel/Application/Readers

        # ACL policy for qscc's "GetTransactionByID" function
        qscc/GetTransactionByID: /Channel/Application/Readers
        # qscc/GetTransactionByID: /Channel/Application/CustomPolicy

        # ACL policy for qscc's "GetBlockByTxID" function
        qscc/GetBlockByTxID: /Channel/Application/Readers

        #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

        # ACL policy for cscc's "GetConfigBlock" function
        cscc/GetConfigBlock: /Channel/Application/Readers

        # ACL policy for cscc's "GetConfigTree" function
        cscc/GetConfigTree: /Channel/Application/Readers

        # ACL policy for cscc's "SimulateConfigTreeUpdate" function
        cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

        #---Miscellanesous peer function to policy mapping for access control---#

        # ACL policy for invoking chaincodes on peer
        peer/Propose: /Channel/Application/Writers
        # peer/Propose: /Channel/Application/Restrict

        # ACL policy for chaincode to chaincode invocation
        peer/ChaincodeToChaincode: /Channel/Application/Readers

        #---Events resource to policy mapping for access control###---#

        # ACL policy for sending block events
        event/Block: /Channel/Application/Readers

        # ACL policy for sending filtered block events
        event/FilteredBlock: /Channel/Application/Readers


    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        # Restrict:
        #     Type: ImplicitMeta
        #     Rule: "ANY CustomPolicy"

    Capabilities:
        <<: *ApplicationCapabilities

Orderer: &OrdererDefaults

    OrdererType: etcdraft

    EtcdRaft:
        Consenters:
        - Host: orderer.example.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt

    Addresses:
        - orderer.example.com:7050

    BatchTimeout: 2s

    BatchSize:
        MaxMessageCount: 10
        AbsoluteMaxBytes: 99 MB
        PreferredMaxBytes: 512 KB

    Organizations:

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    Capabilities:
        <<: *ChannelCapabilities


Profiles:
    BasicChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *farmer
                - *consumer
                - *distributor
                - *manufacturer
              
                - *wholesaler
            Capabilities:
                <<: *ApplicationCapabilities
    OrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            EtcdRaft:
                Consenters:
                - Host: orderer.example.com
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
                
            Addresses:
                - orderer.example.com:7050
               

            Organizations:
            - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                - *farmer
                - *consumer
                - *distributor
                - *manufacturer
                
                - *wholesaler
